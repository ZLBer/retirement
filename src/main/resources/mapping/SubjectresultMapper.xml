<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test.mapper.SubjectresultMapper">
  <resultMap id="BaseResultMap" type="test.domain.Subjectresult">
    <id column="result_id" jdbcType="INTEGER" property="resultId" />
    <result column="result_student" jdbcType="INTEGER" property="resultStudent" />
    <result column="result_subject" jdbcType="INTEGER" property="resultSubject" />
    <result column="result_time" jdbcType="TIMESTAMP" property="resultTime" />
    <result column="result_state" jdbcType="INTEGER" property="resultState" />
    <result column="other" jdbcType="VARCHAR" property="other" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    result_id, result_student, result_subject, result_time, result_state, other
  </sql>
  <select id="selectByExample" parameterType="test.domain.SubjectresultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from subjectresult
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from subjectresult
    where result_id = #{resultId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from subjectresult
    where result_id = #{resultId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="test.domain.SubjectresultExample">
    delete from subjectresult
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="test.domain.Subjectresult">
    insert into subjectresult (result_id, result_student, result_subject, 
      result_time, result_state, other
      )
    values (#{resultId,jdbcType=INTEGER}, #{resultStudent,jdbcType=INTEGER}, #{resultSubject,jdbcType=INTEGER}, 
      #{resultTime,jdbcType=TIMESTAMP}, #{resultState,jdbcType=INTEGER}, #{other,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="test.domain.Subjectresult">
    insert into subjectresult
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resultId != null">
        result_id,
      </if>
      <if test="resultStudent != null">
        result_student,
      </if>
      <if test="resultSubject != null">
        result_subject,
      </if>
      <if test="resultTime != null">
        result_time,
      </if>
      <if test="resultState != null">
        result_state,
      </if>
      <if test="other != null">
        other,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resultId != null">
        #{resultId,jdbcType=INTEGER},
      </if>
      <if test="resultStudent != null">
        #{resultStudent,jdbcType=INTEGER},
      </if>
      <if test="resultSubject != null">
        #{resultSubject,jdbcType=INTEGER},
      </if>
      <if test="resultTime != null">
        #{resultTime,jdbcType=TIMESTAMP},
      </if>
      <if test="resultState != null">
        #{resultState,jdbcType=INTEGER},
      </if>
      <if test="other != null">
        #{other,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="test.domain.SubjectresultExample" resultType="java.lang.Long">
    select count(*) from subjectresult
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update subjectresult
    <set>
      <if test="record.resultId != null">
        result_id = #{record.resultId,jdbcType=INTEGER},
      </if>
      <if test="record.resultStudent != null">
        result_student = #{record.resultStudent,jdbcType=INTEGER},
      </if>
      <if test="record.resultSubject != null">
        result_subject = #{record.resultSubject,jdbcType=INTEGER},
      </if>
      <if test="record.resultTime != null">
        result_time = #{record.resultTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.resultState != null">
        result_state = #{record.resultState,jdbcType=INTEGER},
      </if>
      <if test="record.other != null">
        other = #{record.other,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update subjectresult
    set result_id = #{record.resultId,jdbcType=INTEGER},
      result_student = #{record.resultStudent,jdbcType=INTEGER},
      result_subject = #{record.resultSubject,jdbcType=INTEGER},
      result_time = #{record.resultTime,jdbcType=TIMESTAMP},
      result_state = #{record.resultState,jdbcType=INTEGER},
      other = #{record.other,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="test.domain.Subjectresult">
    update subjectresult
    <set>
      <if test="resultStudent != null">
        result_student = #{resultStudent,jdbcType=INTEGER},
      </if>
      <if test="resultSubject != null">
        result_subject = #{resultSubject,jdbcType=INTEGER},
      </if>
      <if test="resultTime != null">
        result_time = #{resultTime,jdbcType=TIMESTAMP},
      </if>
      <if test="resultState != null">
        result_state = #{resultState,jdbcType=INTEGER},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=VARCHAR},
      </if>
    </set>
    where result_id = #{resultId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="test.domain.Subjectresult">
    update subjectresult
    set result_student = #{resultStudent,jdbcType=INTEGER},
      result_subject = #{resultSubject,jdbcType=INTEGER},
      result_time = #{resultTime,jdbcType=TIMESTAMP},
      result_state = #{resultState,jdbcType=INTEGER},
      other = #{other,jdbcType=VARCHAR}
    where result_id = #{resultId,jdbcType=INTEGER}
  </update>
</mapper>