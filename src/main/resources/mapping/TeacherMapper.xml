<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test.mapper.TeacherMapper">
    <resultMap id="BaseResultMap" type="test.domain.Teacher">
        <id column="teacher_id" jdbcType="INTEGER" property="teacherId"/>
        <result column="teacher_name" jdbcType="VARCHAR" property="teacherName"/>
        <result column="teacher_department" jdbcType="INTEGER" property="teacherDepartment"/>
        <result column="teacher_tel" jdbcType="VARCHAR" property="teacherTel"/>
        <result column="teacher_professional" jdbcType="VARCHAR" property="teacherProfessional"/>
        <result column="teacher_snumber" jdbcType="INTEGER" property="teacherSnumber"/>
        <result column="other" jdbcType="VARCHAR" property="other"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        teacher_id, teacher_name, teacher_department, teacher_tel, teacher_professional,
        teacher_snumber, other
    </sql>
    <select id="selectByExample" parameterType="test.domain.TeacherExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from teacher
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from teacher
        where teacher_id = #{teacherId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM teacher
        WHERE teacher_id = #{teacherId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="test.domain.TeacherExample">
        delete from teacher
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="test.domain.Teacher">
        INSERT INTO teacher (teacher_id, teacher_name, teacher_department,
                             teacher_tel, teacher_professional, teacher_snumber,
                             other)
        VALUES (#{teacherId,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, #{teacherDepartment,jdbcType=INTEGER},
                #{teacherTel,jdbcType=VARCHAR}, #{teacherProfessional,jdbcType=VARCHAR},
                #{teacherSnumber,jdbcType=INTEGER},
                #{other,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="test.domain.Teacher">
        insert into teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teacherId != null">
                teacher_id,
            </if>
            <if test="teacherName != null">
                teacher_name,
            </if>
            <if test="teacherDepartment != null">
                teacher_department,
            </if>
            <if test="teacherTel != null">
                teacher_tel,
            </if>
            <if test="teacherProfessional != null">
                teacher_professional,
            </if>
            <if test="teacherSnumber != null">
                teacher_snumber,
            </if>
            <if test="other != null">
                other,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teacherId != null">
                #{teacherId,jdbcType=INTEGER},
            </if>
            <if test="teacherName != null">
                #{teacherName,jdbcType=VARCHAR},
            </if>
            <if test="teacherDepartment != null">
                #{teacherDepartment,jdbcType=INTEGER},
            </if>
            <if test="teacherTel != null">
                #{teacherTel,jdbcType=VARCHAR},
            </if>
            <if test="teacherProfessional != null">
                #{teacherProfessional,jdbcType=VARCHAR},
            </if>
            <if test="teacherSnumber != null">
                #{teacherSnumber,jdbcType=INTEGER},
            </if>
            <if test="other != null">
                #{other,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="test.domain.TeacherExample" resultType="java.lang.Long">
        select count(*) from teacher
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update teacher
        <set>
            <if test="record.teacherId != null">
                teacher_id = #{record.teacherId,jdbcType=INTEGER},
            </if>
            <if test="record.teacherName != null">
                teacher_name = #{record.teacherName,jdbcType=VARCHAR},
            </if>
            <if test="record.teacherDepartment != null">
                teacher_department = #{record.teacherDepartment,jdbcType=INTEGER},
            </if>
            <if test="record.teacherTel != null">
                teacher_tel = #{record.teacherTel,jdbcType=VARCHAR},
            </if>
            <if test="record.teacherProfessional != null">
                teacher_professional = #{record.teacherProfessional,jdbcType=VARCHAR},
            </if>
            <if test="record.teacherSnumber != null">
                teacher_snumber = #{record.teacherSnumber,jdbcType=INTEGER},
            </if>
            <if test="record.other != null">
                other = #{record.other,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update teacher
        set teacher_id = #{record.teacherId,jdbcType=INTEGER},
        teacher_name = #{record.teacherName,jdbcType=VARCHAR},
        teacher_department = #{record.teacherDepartment,jdbcType=INTEGER},
        teacher_tel = #{record.teacherTel,jdbcType=VARCHAR},
        teacher_professional = #{record.teacherProfessional,jdbcType=VARCHAR},
        teacher_snumber = #{record.teacherSnumber,jdbcType=INTEGER},
        other = #{record.other,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="test.domain.Teacher">
        update teacher
        <set>
            <if test="teacherName != null">
                teacher_name = #{teacherName,jdbcType=VARCHAR},
            </if>
            <if test="teacherDepartment != null">
                teacher_department = #{teacherDepartment,jdbcType=INTEGER},
            </if>
            <if test="teacherTel != null">
                teacher_tel = #{teacherTel,jdbcType=VARCHAR},
            </if>
            <if test="teacherProfessional != null">
                teacher_professional = #{teacherProfessional,jdbcType=VARCHAR},
            </if>
            <if test="teacherSnumber != null">
                teacher_snumber = #{teacherSnumber,jdbcType=INTEGER},
            </if>
            <if test="other != null">
                other = #{other,jdbcType=VARCHAR},
            </if>
        </set>
        where teacher_id = #{teacherId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="test.domain.Teacher">
        UPDATE teacher
        SET teacher_name         = #{teacherName,jdbcType=VARCHAR},
            teacher_department   = #{teacherDepartment,jdbcType=INTEGER},
            teacher_tel          = #{teacherTel,jdbcType=VARCHAR},
            teacher_professional = #{teacherProfessional,jdbcType=VARCHAR},
            teacher_snumber      = #{teacherSnumber,jdbcType=INTEGER},
            other                = #{other,jdbcType=VARCHAR}
        WHERE teacher_id = #{teacherId,jdbcType=INTEGER}
    </update>
    <!--新加-->
    <select id="getTeachersByDepart" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from teacher
        where teacher_department = #{departId,jdbcType=INTEGER}
    </select>
</mapper>