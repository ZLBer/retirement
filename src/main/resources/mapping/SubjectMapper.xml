<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test.mapper.SubjectMapper">
  <resultMap id="BaseResultMap" type="test.domain.Subject">
    <id column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="subject_name" jdbcType="VARCHAR" property="subjectName" />
    <result column="subject_teacher" jdbcType="INTEGER" property="subjectTeacher" />
    <result column="subject_number" jdbcType="INTEGER" property="subjectNumber" />
    <result column="subject_snumber" jdbcType="INTEGER" property="subjectSnumber" />
    <result column="subject_department" jdbcType="INTEGER" property="subjectDepartment" />
    <result column="other" jdbcType="VARCHAR" property="other" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    subject_id, subject_name, subject_teacher, subject_number, subject_snumber, subject_department, 
    other
  </sql>
  <select id="selectByExample" parameterType="test.domain.SubjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from subject
    where subject_id = #{subjectId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from subject
    where subject_id = #{subjectId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="test.domain.SubjectExample">
    delete from subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="test.domain.Subject">
    insert into subject (subject_id, subject_name, subject_teacher, 
      subject_number, subject_snumber, subject_department, 
      other)
    values (#{subjectId,jdbcType=INTEGER}, #{subjectName,jdbcType=VARCHAR}, #{subjectTeacher,jdbcType=INTEGER}, 
      #{subjectNumber,jdbcType=INTEGER}, #{subjectSnumber,jdbcType=INTEGER}, #{subjectDepartment,jdbcType=INTEGER}, 
      #{other,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="test.domain.Subject">
    insert into subject
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="subjectName != null">
        subject_name,
      </if>
      <if test="subjectTeacher != null">
        subject_teacher,
      </if>
      <if test="subjectNumber != null">
        subject_number,
      </if>
      <if test="subjectSnumber != null">
        subject_snumber,
      </if>
      <if test="subjectDepartment != null">
        subject_department,
      </if>
      <if test="other != null">
        other,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="subjectId != null">
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="subjectName != null">
        #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="subjectTeacher != null">
        #{subjectTeacher,jdbcType=INTEGER},
      </if>
      <if test="subjectNumber != null">
        #{subjectNumber,jdbcType=INTEGER},
      </if>
      <if test="subjectSnumber != null">
        #{subjectSnumber,jdbcType=INTEGER},
      </if>
      <if test="subjectDepartment != null">
        #{subjectDepartment,jdbcType=INTEGER},
      </if>
      <if test="other != null">
        #{other,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="test.domain.SubjectExample" resultType="java.lang.Long">
    select count(*) from subject
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update subject
    <set>
      <if test="record.subjectId != null">
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.subjectName != null">
        subject_name = #{record.subjectName,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectTeacher != null">
        subject_teacher = #{record.subjectTeacher,jdbcType=INTEGER},
      </if>
      <if test="record.subjectNumber != null">
        subject_number = #{record.subjectNumber,jdbcType=INTEGER},
      </if>
      <if test="record.subjectSnumber != null">
        subject_snumber = #{record.subjectSnumber,jdbcType=INTEGER},
      </if>
      <if test="record.subjectDepartment != null">
        subject_department = #{record.subjectDepartment,jdbcType=INTEGER},
      </if>
      <if test="record.other != null">
        other = #{record.other,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update subject
    set subject_id = #{record.subjectId,jdbcType=INTEGER},
      subject_name = #{record.subjectName,jdbcType=VARCHAR},
      subject_teacher = #{record.subjectTeacher,jdbcType=INTEGER},
      subject_number = #{record.subjectNumber,jdbcType=INTEGER},
      subject_snumber = #{record.subjectSnumber,jdbcType=INTEGER},
      subject_department = #{record.subjectDepartment,jdbcType=INTEGER},
      other = #{record.other,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="test.domain.Subject">
    update subject
    <set>
      <if test="subjectName != null">
        subject_name = #{subjectName,jdbcType=VARCHAR},
      </if>
      <if test="subjectTeacher != null">
        subject_teacher = #{subjectTeacher,jdbcType=INTEGER},
      </if>
      <if test="subjectNumber != null">
        subject_number = #{subjectNumber,jdbcType=INTEGER},
      </if>
      <if test="subjectSnumber != null">
        subject_snumber = #{subjectSnumber,jdbcType=INTEGER},
      </if>
      <if test="subjectDepartment != null">
        subject_department = #{subjectDepartment,jdbcType=INTEGER},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=VARCHAR},
      </if>
    </set>
    where subject_id = #{subjectId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="test.domain.Subject">
    update subject
    set subject_name = #{subjectName,jdbcType=VARCHAR},
      subject_teacher = #{subjectTeacher,jdbcType=INTEGER},
      subject_number = #{subjectNumber,jdbcType=INTEGER},
      subject_snumber = #{subjectSnumber,jdbcType=INTEGER},
      subject_department = #{subjectDepartment,jdbcType=INTEGER},
      other = #{other,jdbcType=VARCHAR}
    where subject_id = #{subjectId,jdbcType=INTEGER}
  </update>


  <!--新加-->
  <select id="getSubjectByTeacher" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from subject
    where subject_teacher = #{teacherId,jdbcType=INTEGER}
  </select>
</mapper>