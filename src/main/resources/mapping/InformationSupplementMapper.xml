<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test.mapper.InformationSupplementMapper">
  <resultMap id="BaseResultMap" type="test.domain.InformationSupplement">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="spouse" jdbcType="VARCHAR" property="spouse" />
    <result column="status_children" jdbcType="VARCHAR" property="statusChildren" />
    <result column="living_condition" jdbcType="VARCHAR" property="livingCondition" />
    <result column="status_other" jdbcType="VARCHAR" property="statusOther" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, spouse, status_children, living_condition, status_other
  </sql>
  <select id="selectByExample" parameterType="test.domain.InformationSupplementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from information_supplement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from information_supplement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from information_supplement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="test.domain.InformationSupplementExample">
    delete from information_supplement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="test.domain.InformationSupplement">
    insert into information_supplement (id, spouse, status_children, 
      living_condition, status_other)
    values (#{id,jdbcType=INTEGER}, #{spouse,jdbcType=VARCHAR}, #{statusChildren,jdbcType=VARCHAR}, 
      #{livingCondition,jdbcType=VARCHAR}, #{statusOther,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="test.domain.InformationSupplement">
    insert into information_supplement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="spouse != null">
        spouse,
      </if>
      <if test="statusChildren != null">
        status_children,
      </if>
      <if test="livingCondition != null">
        living_condition,
      </if>
      <if test="statusOther != null">
        status_other,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="spouse != null">
        #{spouse,jdbcType=VARCHAR},
      </if>
      <if test="statusChildren != null">
        #{statusChildren,jdbcType=VARCHAR},
      </if>
      <if test="livingCondition != null">
        #{livingCondition,jdbcType=VARCHAR},
      </if>
      <if test="statusOther != null">
        #{statusOther,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="test.domain.InformationSupplementExample" resultType="java.lang.Long">
    select count(*) from information_supplement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update information_supplement
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.spouse != null">
        spouse = #{record.spouse,jdbcType=VARCHAR},
      </if>
      <if test="record.statusChildren != null">
        status_children = #{record.statusChildren,jdbcType=VARCHAR},
      </if>
      <if test="record.livingCondition != null">
        living_condition = #{record.livingCondition,jdbcType=VARCHAR},
      </if>
      <if test="record.statusOther != null">
        status_other = #{record.statusOther,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update information_supplement
    set id = #{record.id,jdbcType=INTEGER},
      spouse = #{record.spouse,jdbcType=VARCHAR},
      status_children = #{record.statusChildren,jdbcType=VARCHAR},
      living_condition = #{record.livingCondition,jdbcType=VARCHAR},
      status_other = #{record.statusOther,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="test.domain.InformationSupplement">
    update information_supplement
    <set>
      <if test="spouse != null">
        spouse = #{spouse,jdbcType=VARCHAR},
      </if>
      <if test="statusChildren != null">
        status_children = #{statusChildren,jdbcType=VARCHAR},
      </if>
      <if test="livingCondition != null">
        living_condition = #{livingCondition,jdbcType=VARCHAR},
      </if>
      <if test="statusOther != null">
        status_other = #{statusOther,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="test.domain.InformationSupplement">
    update information_supplement
    set spouse = #{spouse,jdbcType=VARCHAR},
      status_children = #{statusChildren,jdbcType=VARCHAR},
      living_condition = #{livingCondition,jdbcType=VARCHAR},
      status_other = #{statusOther,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>